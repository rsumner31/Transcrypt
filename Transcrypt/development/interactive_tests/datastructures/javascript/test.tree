file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = *
					asname: NoneType = None
			level: int = 0
		element: Assign 
			targets: list 
				element: Name 
					id: str = aList
					ctx: Store 
			value: List 
				elts: list 
					element: Num 
						n: int = 1
					element: Num 
						n: int = 2
					element: Num 
						n: int = 3
					element: Str 
						s: str = sun
					element: Str 
						s: str = moon
					element: Str 
						s: str = stars
				ctx: Load 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = aList
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Subscript 
						value: Name 
							id: str = aList
							ctx: Load 
						slice: Slice 
							lower: Num 
								n: int = 2
							upper: Num 
								n: int = 4
							step: Num 
								n: int = 1
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Subscript 
						value: Name 
							id: str = aList
							ctx: Load 
						slice: Slice 
							lower: NoneType = None
							upper: NoneType = None
							step: NoneType = None
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Subscript 
						value: Name 
							id: str = aList
							ctx: Load 
						slice: Slice 
							lower: Num 
								n: int = 2
							upper: NoneType = None
							step: NoneType = None
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Call 
						func: Name 
							id: str = len
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = aList
						ctx: Load 
					attr: str = append
					ctx: Load 
				args: list 
					element: Str 
						s: str = milkyway
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = aList
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = aList
						ctx: Load 
					attr: str = extend
					ctx: Load 
				args: list 
					element: List 
						elts: list 
							element: Str 
								s: str = m1
							element: Str 
								s: str = m31
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = aList
						ctx: Load 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = anotherList
					ctx: Store 
			value: Call 
				func: Name 
					id: str = list
					ctx: Load 
				args: list 
					element: Tuple 
						elts: list 
							element: Str 
								s: str = a
							element: Str 
								s: str = b
							element: Str 
								s: str = c
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = anotherList
						ctx: Load 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = aDict
					ctx: Store 
			value: Dict 
				keys: list 
					element: Num 
						n: int = 1
					element: Str 
						s: str = animal
				values: list 
					element: Str 
						s: str = plant
					element: Num 
						n: int = 2
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = aDict
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Subscript 
						value: Name 
							id: str = aDict
							ctx: Load 
						slice: Index 
							value: Num 
								n: int = 1
						ctx: Load 
					element: Subscript 
						value: Name 
							id: str = aDict
							ctx: Load 
						slice: Index 
							value: Str 
								s: str = animal
						ctx: Load 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = aTuple
					ctx: Store 
			value: Tuple 
				elts: list 
					element: Num 
						n: int = 1
					element: Num 
						n: int = 2
					element: Num 
						n: int = 3
					element: Num 
						n: int = 4
					element: Num 
						n: int = 5
				ctx: Load 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = aTuple
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Call 
						func: Name 
							id: str = len
							ctx: Load 
						args: list 
							element: Name 
								id: str = aTuple
								ctx: Load 
						keywords: list 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = anotherTuple
					ctx: Store 
			value: Tuple 
				elts: list 
					element: Num 
						n: int = 1
				ctx: Load 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Name 
						id: str = anotherTuple
						ctx: Load 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = aSet
					ctx: Store 
			value: Set 
				elts: list 
					element: Num 
						n: int = 1
					element: Num 
						n: int = 2
					element: Num 
						n: int = 2
					element: Num 
						n: int = 3
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = console
						ctx: Load 
					attr: str = log
					ctx: Load 
				args: list 
					element: Name 
						id: str = aSet
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Call 
						func: Name 
							id: str = len
							ctx: Load 
						args: list 
							element: Name 
								id: str = aSet
								ctx: Load 
						keywords: list 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = anotherSet
					ctx: Store 
			value: Call 
				func: Name 
					id: str = set
					ctx: Load 
				args: list 
					element: Tuple 
						elts: list 
							element: Num 
								n: int = 4
							element: Num 
								n: int = 5
							element: Num 
								n: int = 5
							element: Num 
								n: int = 6
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = console
						ctx: Load 
					attr: str = log
					ctx: Load 
				args: list 
					element: Name 
						id: str = anotherSet
						ctx: Load 
				keywords: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = emptySet
					ctx: Store 
			value: Call 
				func: Name 
					id: str = set
					ctx: Load 
				args: list 
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = console
						ctx: Load 
					attr: str = log
					ctx: Load 
				args: list 
					element: Name 
						id: str = emptySet
						ctx: Load 
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = print
					ctx: Load 
				args: list 
					element: Call 
						func: Name 
							id: str = len
							ctx: Load 
						args: list 
							element: Name 
								id: str = emptySet
								ctx: Load 
						keywords: list 
				keywords: list 